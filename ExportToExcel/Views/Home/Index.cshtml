@{
    ViewBag.Title = "Home Page";
}

﻿@{
    ViewData["Title"] = "Excel Export Tool";
}

<div class="excel-export-container">
    <div class="card animated-card">
        <div class="card-header">
            <h2><i class="fas fa-file-excel"></i> Export to Excel</h2>
        </div>
        <div class="card-body">
            <p class="description">Generate a CSV file with sample product data with just one click.</p>

            @using (Html.BeginForm("ExportDataToExcel", "Home", FormMethod.Post, new { id = "exportForm" }))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-excel">
                    <i class="fa fa-download"></i> Generate Excel File
                </button>
            }

            <div class="loading-animation d-none">
                <div class="spinner"></div>
                <p>Preparing your download...</p>
            </div>
        </div>
    </div>

    <div class="download-complete d-none">
        <div class="checkmark">✓</div>
        <p>Download complete!</p>
    </div>
</div>


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<style>
    :root {
        --excel-green: #217346;
        --excel-light-green: #e6f2ed;
        --excel-dark-green: #1a5c38;
    }

    body {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .excel-export-container {
        max-width: 600px;
        margin: 50px auto;
        padding: 0 15px;
    }

    .animated-card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .animated-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
        }

    .card-header {
        background-color: var(--excel-green);
        color: white;
        padding: 20px;
        text-align: center;
    }

        .card-header h2 {
            margin: 0;
            font-weight: 600;
        }

        .card-header i {
            margin-right: 10px;
        }

    .card-body {
        padding: 30px;
        background-color: white;
    }

    .description {
        color: #555;
        margin-bottom: 25px;
        text-align: center;
        font-size: 16px;
    }

    .btn-excel {
        background-color: var(--excel-green);
        color: white;
        border: none;
        padding: 12px 25px;
        font-size: 16px;
        font-weight: 500;
        border-radius: 6px;
        width: 100%;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-excel:hover {
            background-color: var(--excel-dark-green);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(33, 115, 70, 0.3);
        }

        .btn-excel:active {
            transform: translateY(0);
        }

    .loading-animation {
        text-align: center;
        margin-top: 20px;
    }

    .spinner {
        width: 50px;
        height: 50px;
        margin: 0 auto 15px;
        border: 5px solid var(--excel-light-green);
        border-top: 5px solid var(--excel-green);
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    .download-complete {
        text-align: center;
        margin-top: 30px;
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.5s ease;
    }

        .download-complete.show {
            opacity: 1;
            transform: translateY(0);
        }

    .checkmark {
        color: var(--excel-green);
        font-size: 60px;
        line-height: 1;
        margin-bottom: 15px;
        animation: checkmarkScale 0.5s ease;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const exportForm = document.getElementById('exportForm');
        const loadingAnimation = document.querySelector('.loading-animation');
        const downloadComplete = document.querySelector('.download-complete');

        exportForm.addEventListener('submit', function (e) {
            e.preventDefault();

            // Show loading animation
            loadingAnimation.classList.remove('d-none');

            // Hide the button during loading
            const submitButton = exportForm.querySelector('button');
            submitButton.disabled = true;

            // Simulate a delay for the animation (in production, this would be the actual request time)
            setTimeout(function () {
                // Submit the form after showing loading state
                exportForm.submit();

                // After submission, show completion
                setTimeout(function () {
                    loadingAnimation.classList.add('d-none');
                    downloadComplete.classList.add('show');
                    submitButton.disabled = false;

                    // Reset after 3 seconds
                    setTimeout(function () {
                        downloadComplete.classList.remove('show');
                    }, 3000);
                }, 1500);
            }, 1000);
        });
    });
</script>